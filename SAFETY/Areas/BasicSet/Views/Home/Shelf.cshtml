@using Microsoft.AspNetCore.Mvc.Localization
@using SAFETY.Resources
@inject IHtmlLocalizer<SharedResources> _localizer

@{
    ViewData["Title"] = @_localizer["貨架資料"];
}

<div id="ShelfVue">
    <div class="FormGroupWarp">
        <fieldset class="SearchBox FormGroup FormElmt">
            <legend class="FormGroupTitle"><span>@_localizer["搜尋條件"]</span></legend>
            <div class="FormTable">
                <div class="item">
                    <div class="label">@_localizer["代碼"]</div>
                    <div class="cont">
                        <input type="text" v-model="queryInfo.ShelfCode" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["儲區"]</div>
                    <div class="cont">
                        <select v-model="queryInfo.AreaId">
                            <option value="">@_localizer["請選擇"]</option>
                            <option v-for="(bItem,index) in arrArea" v-if="bItem.IsStop=='N'" :value="bItem.AreaId">{{bItem.AreaCode}}-{{bItem.AreaName}}</option>
                        </select>
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["類型"]</div>
                    <div class="cont">
                        <select v-model="queryInfo.ShelfTypeId">
                            <option value="">@_localizer["請選擇"]</option>
                            <option v-for="(bItem,index) in arrShelfType" v-if="bItem.IsStop=='N'" :value="bItem.ShelfTypeId">{{bItem.ShelfTypeCode}}-{{bItem.ShelfTypeName}}</option>
                        </select>
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["狀態"]</div>
                    <div class="cont">
                        <select v-model="queryInfo.IsStop">
                            <option value="">@_localizer["請選擇"]</option>
                            <option value="N">@_localizer["啟用"]</option>
                            <option value="Y">@_localizer["停用"]</option>
                        </select>
                    </div>
                </div>
            </div>

            <div class="BtnCommon mid">
                <div class="search"><span><input type="submit" value="@_localizer["搜尋"]" v-on:click="onSearch" /></span></div>
                @*<div class="cancel"><span><input type="reset" value="清除" /></span></div>*@
            </div>

        </fieldset>
    </div>

    <div class="ListTable" v-show="arrResult.length>0">
        <div class="table_title">
            <div class="btnBox">
                <div>
                    <div class=""><a href="javascript:;" v-bind:class="{'btn_disabled':noSelect || !noEdit }" v-on:click="onDelete">@_localizer["刪除"]</a></div>
                    <div class=""><a href="javascript:;" v-bind:class="{'btn_disabled':noSelect}" v-on:click="editSet">@_localizer["修改"]</a></div>
                </div>
            </div>
        </div>
        <table id="dataTable" class="table dataTable stripe">
        </table>
    </div>

    <!--基本資料-->
    <div class="FormGroupWarp">
        <fieldset class="SearchBox FormGroup FormElmt">
            <legend class="FormGroupTitle"><span>@_localizer["基本資料"]</span></legend>
            <div class="btnBox">
                <div>
                    <div class=""><a v-bind:class="{'btn_disabled':disAdd}" href="javascript:;" v-on:click="addReset">@_localizer["新增"]</a></div>
                    <div class=""><a v-bind:class="{'btn_disabled':noEdit}" href="javascript:;" v-on:click="onSubmit">@_localizer["儲存"]</a></div>
                    <div class=""><a v-bind:class="{'btn_disabled':noEdit}" href="javascript:;" v-on:click="onCancel">@_localizer["離開"]</a></div>
                </div>
            </div>
            <div class="FormTable">
                <div class="item two">
                    <div class="label"><span class="red">*</span>@_localizer["代碼"]</div>
                    <div class="cont">
                        <input type="text" v-model="objInfo.ShelfCode" />
                    </div>
                </div>
                <div class="item ">
                    <div class="label"><span class="red">*</span>@_localizer["儲區"]</div>
                    <div class="cont">
                        <select v-model="objInfo.AreaId">
                            <option value="">@_localizer["請選擇"]</option>
                            <option v-for="(bItem,index) in arrArea" v-if="bItem.IsStop=='N'" :value="bItem.AreaId">{{bItem.AreaCode}}-{{bItem.AreaName}}</option>
                        </select>
                    </div>
                </div>
                <div class="item ">
                    <div class="label"><span class="red">*</span>@_localizer["狀態"]</div>
                    <div class="cont">
                        <select v-model="objInfo.IsStop">
                            <option value="">@_localizer["請選擇"]</option>
                            <option value="N">@_localizer["啟用"]</option>
                            <option value="Y">@_localizer["停用"]</option>
                        </select>
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["類型"]</div>
                    <div class="cont">
                        <select v-model="objInfo.ShelfTypeId">
                            <option value="">@_localizer["請選擇"]</option>
                            <option v-for="(bItem,index) in arrShelfType" v-if="bItem.IsStop=='N'" :value="bItem.ShelfTypeId">{{bItem.ShelfTypeCode}}-{{bItem.ShelfTypeName}}</option>
                        </select>
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["貨架層數"]</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.Racks" min="1" max="10" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["前一個貨架"]</div>
                    <div class="cont">
                        <select v-model="objInfo.PrevShelfId">
                            <option value="">@_localizer["請選擇"]</option>
                            <option v-for="(bItem,index) in arrShelf" v-if="bItem.IsStop=='N'" :value="bItem.ShelfId">{{bItem.ShelfCode}}</option>
                        </select>
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["後一個貨架"]</div>
                    <div class="cont">
                        <select v-model="objInfo.NextShelfId">
                            <option value="">@_localizer["請選擇"]</option>
                            <option v-for="(bItem,index) in arrShelf" v-if="bItem.IsStop=='N'" :value="bItem.ShelfId">{{bItem.ShelfCode}}</option>
                        </select>
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["下方走道寬度"] (m)</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.DownAisleWidth" min="0.00" max="1000.00" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["上方走道寬度"] (m)</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.UpAisleWidth" min="0.00" max="1000.00" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["左方走道寬度"] (m)</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.LeftAisleWidth" min="0.00" max="1000.00" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["右方走道寬度"] (m)</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.RightAisleWidth" min="0.00" max="1000.00" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["貨架寬度(x方向)"] (m)</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.Width" min="0.00" max="1000.00" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["貨架長度(y方向)"] (m)</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.Length" min="0.00" max="1000.00" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["貨架左上x軸"] (m)</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.X1" min="0.00" max="1000.00" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["貨架右下x軸"] (m)</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.X2" min="0.00" max="1000.00" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["貨架左上y軸"] (m)</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.Y1" min="0.00" max="1000.00" />
                    </div>
                </div>
                <div class="item">
                    <div class="label">@_localizer["貨架右下y軸"] (m)</div>
                    <div class="cont">
                        <input type="number" v-model="objInfo.Y2" min="0.00" max="1000.00" />
                    </div>
                </div>
                <div class="item two">
                    <div class="label">@_localizer["備註"]</div>
                    <div class="cont">
                        <textarea rows="2" style="width:100%" v-model="objInfo.Remarks" maxlength="200"></textarea>
                    </div>
                </div>
            </div>
        </fieldset>
    </div>


</div>

@section Scripts{
    <script>

    var tv = new Vue({
        el: '#ShelfVue',
        computed: {
            // 尚未選擇列
            noSelect: function () {
                return (Object.keys(this.rowSelect).length === 0)
            },
            // 尚未點選新增或編輯
            noEdit: function () {
                return (Object.keys(this.objInfo).length === 0)
            },
        },
        data: {
            // 新增按鈕樣式
            disAdd: false,
            // 查詢條件
            queryInfo: {
                ShelfCode: '',
                AreaId: '',
                ShelfTypeId: '',
                IsStop: ''
            },
            // 查詢結果
            arrResult: [],
            // 新增/編輯
            objInfo: {},
            rowSelect: {},
            coulmnSet: [],
            columnDef: [],
            arrArea: [],        // 儲區下拉選單
            arrShelfType: [],         // 貨架類型下拉選單
            arrShelf: []         // 貨架下拉選單
        },
        created: function () {
            // 儲區下拉選單
            this.getAreaData();
            // 貨架類型下拉選單
            this.getShelfTypeData();
            // 貨架下拉選單
            this.getShelfData(0);
        },
        methods: {
            // 儲區下拉選單
            getAreaData: function () {
                axios.get('/api/Common/Options/GetAreaData')
                    .then(function (res) {
                        this.arrArea = res.data;
                    }.bind(this))
                    .catch(function (err) {
                        console.error(err);
                    })
            },
            // 貨架類型下拉選單
            getShelfTypeData: function () {
                axios.get('/api/Common/Options/GetShelfTypeData')
                    .then(function (res) {
                        this.arrShelfType = res.data;
                    }.bind(this))
                    .catch(function (err) {
                        console.error(err);
                    })
            },
            // 貨架下拉選單
            getShelfData: function (_shelfid) {
                axios.get('/api/Common/Options/GetShelfData?ShelfId=' + _shelfid)
                    .then(function (res) {
                        this.arrShelf = res.data;
                    }.bind(this))
                    .catch(function (err) {
                        console.error(err);
                    })
            },
                onSearch: function () {
                    let thisvue = this;
                    thisvue.disAdd = false;
                    thisvue.rowSelect = {};
                    thisvue.objInfo = {};
                    thisvue.arrResult = [];

                    thisvue.coulmnSet = [
                        {
                            title: "@_localizer["代碼"]",
                            "data": "ShelfCode"
                        },
                        {
                            title: "@_localizer["儲區"]",
                            "data": "AreaName"
                        },
                        {
                            title: "@_localizer["貨架類型"]",
                            "data": "ShelfTypeName"
                        },
                        {
                            title: "@_localizer["前一個貨架"]",
                            "data": "PrevShelfCode"
                        },
                        {
                            title: "@_localizer["後一個貨架"]",
                            "data": "NextShelfCode"
                        },
                        {
                            title: "@_localizer["狀態"]",
                            "data": "IsStop"
                        }
                    ];

                    thisvue.columnDef = [
                        {
                            "className": "text-center",
                            "targets": [5],
                            mRender: function (result) {
                                if (result != null) {
                                    //console.log(result);
                                    var sbtn = result == "N" ? "@_localizer["啟用"]" : "@_localizer["停用"]";

                                    return sbtn;
                                }
                            }
                        }
                    ];

                    var issearch = false;
                    LoadDataTable('@Url.Action("QueryShelf", "ShelfApi", new { Area = "BasicSet" })', this.queryInfo, this.coulmnSet, this.columnDef, issearch)
                        .then(function () {
                            thisvue.arrResult = $('#dataTable').DataTable().rows().data();
                            $('#dataTable tbody').on('click', 'tr', function () {
                                $('#dataTable').DataTable().$('tbody tr.selected').removeClass('selected');
                                $(this).toggleClass('selected');
                                if ($('#dataTable').DataTable().rows('.selected').data().length > 0) {
                                    thisvue.rowSelect = JSON.parse(JSON.stringify($('#dataTable').DataTable().rows('.selected').data()[0]));
                                } else
                                    thisvue.rowSelect = {};
                            });
                        });
            },
            onDelete: function () {
                let thisvue = this;
                if (thisvue.noSelect) {
                    _AlertMsg(false, '@_localizer["請選擇資料"]')
                    return false
                }
                _ConfirmAlert('w', '@_localizer["警告"]', '@_localizer["確定刪除嗎?"]', true, function () {
                    axios.post('/api/BasicSet/ShelfApi/DeleteShelf', thisvue.rowSelect)
                        .then(function (res) {
                            //this.arrResult = res.data.dt
                            // 刪除成功，清空選擇資料
                            console.log(res);

                            if (res.data.isOk) {
                                let RemoveIndex;
                                var filteredElements = thisvue.arrResult.filter(function (item, index) { RemoveIndex = index; return item.ShelfId == thisvue.rowSelect.ShelfId; });
                                //console.log(RemoveIndex);
                                //let RemoveIndex = thisvue.arrResult.findIndex(e => e.ShelfTypeId == thisvue.rowSelect.ShelfTypeId);
                                thisvue.arrResult.splice(RemoveIndex, 1);
                                thisvue.rowSelect = {}
                                $('#dataTable').DataTable().rows('.selected').remove().draw(false);
                            }
                        }.bind(this))
                        .catch(function (err) {
                            console.error(err);
                        })
                });
            },
            // 新增按鈕
            addReset: function () {
                this.disAdd = !this.disAdd
                this.objInfo = {
                    'ShelfId': 0,
                    'ShelfCode': '',
                    'AreaId': 0,
                    'ShelfTypeId': 0,
                    'Racks': 0,
                    'PrevShelfId': 0,
                    'NextShelfId': 0,
                    'DownAisleWidth': 0,
                    'UpAisleWidth': 0,
                    'LeftAisleWidth': 0,
                    'RightAisleWidth': 0,
                    'Width': 0,
                    'Length': 0,
                    'X1': 0,
                    'X2': 0,
                    'Y1': 0,
                    'Y2': 0,
                    'Y2': 0,
                    'IsStop': 'N',
                    'Remarks': ''
                };
                this.rowSelect = {};
                // 貨架下拉選單
                this.getShelfData(0);
                if (!this.noSelect)
                $('#dataTable').DataTable().$('tbody tr.selected').removeClass('selected');
            },
            // 修改
            editSet: function () {
                if (this.noSelect) {
                    _AlertMsg(false, '@_localizer["請選擇資料"]')
                    return false
                }
                this.disAdd = !this.disAdd
                this.objInfo = JSON.parse(JSON.stringify(this.rowSelect));
                this.getShelfData(this.rowSelect.ShelfId);
            },
            // 儲存
            onSubmit: function () {
                if (this.noEdit) {
                    _AlertMsg(false, '@_localizer["請點選新增或選擇列後點選修改"]')
                    return false
                }
                axios.post('/api/BasicSet/ShelfApi/UpdateShelf', this.objInfo)
                    .then(function (res) {
                        _AlertMsg(res.data.isOk, res.data.msg)
                        // 編輯成功，清空選擇資料
                        if (res.data.isOk) {
                            this.rowSelect = {}
                            this.onSearch()
                            // 貨架下拉選單
                            this.getShelfData(0);
                        }
                    }.bind(this))
                    .catch(function (err) {
                        console.error(err);
                    })
            },
            // 離開
            onCancel: function () {
                if (this.noEdit) {
                    _AlertMsg(false, '@_localizer["請點選新增或選擇列後點選修改"]')
                    return false
                }
                this.objInfo = {}
                this.rowSelect = {}
                this.disAdd = false;
                // 貨架下拉選單
                this.getShelfData(0);
                $('#dataTable').DataTable().$('tbody tr.selected').removeClass('selected');
            }
        }
    });
    </script>

}